/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.alxx.betest;


import java.io.IOException;
import java.security.GeneralSecurityException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import net.sourceforge.tess4j.Tesseract;
import net.sourceforge.tess4j.TesseractException;

/**
 *
 * @author alxx
 */
public class MainMenu extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    
    private final FileNameExtensionFilter filterImage = new FileNameExtensionFilter("Images", "jpg", "png");
    private String enResult = "";
    private String chResult = "";  
    private final String folderId = "1m42tnIE-6PDpG1c3ovVXGcKxK_uvvULl";
    
    public MainMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void selectFileImage() {
        JFileChooser jc = new JFileChooser();
        jc.setFileFilter(filterImage);
        int saveDialog = jc.showSaveDialog(null);
        
        if (saveDialog == JFileChooser.APPROVE_OPTION) {
            filepath.setText(jc.getSelectedFile().getAbsolutePath());
        }
    }
    
    public void extractText() {
        java.io.File image = new java.io.File(filepath.getText());
        Tesseract tess4j = new Tesseract();
        tess4j.setDatapath("/home/alxx/Apps/tess4j-traindata");

        try {
            tess4j.setTessVariable("user_defined_dpi", "200");
            if(enCheck.isSelected()) {
                String result = tess4j.doOCR(image);
                enResult = cleanString("en", result);
            }

            if(chCheck.isSelected()) {
                tess4j.setLanguage("chi_sim");
                String result2 = tess4j.doOCR(image);
                chResult = cleanString("chi", result2);
            }

        } catch (TesseractException e) {
            System.err.println(e.getMessage());
        }
    }
    
    public String cleanString(String lang, String text) {
        if(lang.equals("en")) {
            text = text.replaceAll("[^a-zA-Z0-9]", " ").replaceAll("\\s+", " ");
        } else {
            text = text.replaceAll("[a-zA-Z0-9]", " ");
        }
        
        if(lang.equals("en")) {
            while (true) {
                if(text.startsWith(" ")) {
                    text = text.substring(1);
                } else {
                    break;
                }
            }
      
            return "<html><p width='320px'>"+coloringResult(text)+"</p></html>";
        }

        return "<html><p width='320px'>"+text+"</p></html>";
    }
        
    public String coloringResult(String str) {
        String[] words = str.split("\\W+");
        for (int i = 0; i < words.length; i++) {
            if(words[i].contains("o")) {
                words[i] = "<font color='blue'>"+words[i]+"</font>";
            }
        }
        
        return String.join(" ", words);
    }
    
    private void msgbox(String s){
        JOptionPane.showMessageDialog(null, s);
    }
      
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        selectFileBtn = new javax.swing.JButton();
        filepath = new javax.swing.JTextField();
        enCheck = new javax.swing.JCheckBox();
        chCheck = new javax.swing.JCheckBox();
        uploadBtn = new javax.swing.JButton();
        extractBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel1.setText("Test Sawit Pro");
        jLabel1.setToolTipText("");

        selectFileBtn.setText("Pilih File");
        selectFileBtn.setToolTipText("");
        selectFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFileBtnActionPerformed(evt);
            }
        });

        filepath.setEditable(false);
        filepath.setText("no file");

        enCheck.setSelected(true);
        enCheck.setText("en");
        enCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enCheckActionPerformed(evt);
            }
        });

        chCheck.setSelected(true);
        chCheck.setText("ch");

        uploadBtn.setText("Upload");
        uploadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadBtnActionPerformed(evt);
            }
        });

        extractBtn.setText("Extract");
        extractBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extractBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(enCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chCheck))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(uploadBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                                    .addComponent(extractBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(selectFileBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(filepath, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(selectFileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filepath, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enCheck)
                    .addComponent(chCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uploadBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(extractBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void selectFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectFileBtnActionPerformed
        selectFileImage();
    }//GEN-LAST:event_selectFileBtnActionPerformed

    private void enCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enCheckActionPerformed

    private void uploadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadBtnActionPerformed
        var filepath_ = String.valueOf(this.filepath.getText());
        if(filepath.getText().isBlank() || filepath_.equals(String.valueOf("no file"))) {
            msgbox("Choose file first");
        } else {
            
            try {
                
                java.io.File img = new java.io.File(filepath_);

                DriveHandler handler = new DriveHandler();
                String fileId = handler.uploadImg(img, folderId);
                
                if(fileId.isBlank()) {
                    msgbox("Upload fail!");
                } else {
                    msgbox("Upload Success ID : "+ fileId);
                }
                
            } catch (IOException | GeneralSecurityException e) {
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_uploadBtnActionPerformed

    private void extractBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extractBtnActionPerformed
        var filepath_ = String.valueOf(this.filepath.getText());
        if(filepath.getText().isBlank() || filepath_.equals(String.valueOf("no file"))) {
            msgbox("Choose file first");
        } else {
            extractText();

            if(!enResult.isEmpty() && enCheck.isSelected()) {
                ResultView resultEn = new ResultView();
                resultEn.setTitleAndResult("Result EN", enResult);
                resultEn.setVisible(true);
            }
            if(!chResult.isEmpty() && chCheck.isSelected()) {
                ResultView resultCh = new ResultView();
                resultCh.setTitleAndResult("Result CH", chResult);
                resultCh.setVisible(true);
            }
        }
    }//GEN-LAST:event_extractBtnActionPerformed

    /**
     * @param args the command line arguments
     * @throws java.io.IOException
     * @throws java.security.GeneralSecurityException
     */
    public static void main(String args[]) throws IOException, GeneralSecurityException{
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainMenu().setVisible(true);
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chCheck;
    private javax.swing.JCheckBox enCheck;
    private javax.swing.JButton extractBtn;
    private javax.swing.JTextField filepath;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton selectFileBtn;
    private javax.swing.JButton uploadBtn;
    // End of variables declaration//GEN-END:variables
}
